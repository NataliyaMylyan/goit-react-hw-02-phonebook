{"version":3,"sources":["components/Filter/Filter.module.css","components/App/App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","newContact","preventDefault","props","onSubmit","reset","this","className","s","container","label","input","type","pattern","title","required","onChange","htmlFor","button","Component","Filter","filter","ContactList","contacts","onClick","handleDeleteBtn","contactList","map","id","contact","App","addNewContact","contactName","shortid","generate","normalizedName","toLowerCase","find","alert","deleteContact","prevState","filterContacts","includes","updateFilter","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14114f90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__1INJV\",\"button\":\"ContactForm_button__1MLZK\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\"};","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    const { name, number } = this.state;\n    const newContact = { name, number };\n    event.preventDefault();\n    this.props.onSubmit(newContact);\n    this.reset();\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.container} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={s.label} htmlFor=\"\">\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ filter, onChange }) => (\n  <div className={s.filter}>\n    <label>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onClick }) => {\n  const handleDeleteBtn = (event) => {\n    const { name } = event.target;\n    onClick(name);\n  };\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.contact} key={id}>\n          <p> {name}</p>\n          <p> {number}</p>\n\n          <button\n            className={s.button}\n            type=\"button\"\n            name={id}\n            onClick={handleDeleteBtn}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm.jsx\";\nimport Filter from \"../Filter/Filter.jsx\";\nimport ContactList from \"../ContactList/ContactList.jsx\";\nimport shortid from \"shortid\";\nimport s from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = (name, number) => {\n    const contactName = { name, number, id: shortid.generate() };\n    const normalizedName = name.toLowerCase();\n    const duplicateName = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (duplicateName) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    if (name === \"\") {\n      alert(`Please type your info in the field. It is empty.`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, contactName],\n      }));\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  filterContacts = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  updateFilter = (event) => {\n    const { value } = event.target;\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.filterContacts();\n    return (\n      <>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.addNewContact} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter filter={filter} onChange={this.updateFilter} />\n        <ContactList contacts={filteredContacts} onClick={this.deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\",\"contact\":\"ContactList_contact__3ZIyH\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}